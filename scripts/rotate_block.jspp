import "java.util.List";
import "org.bukkit.Axis";
import "org.bukkit.Particle";
import "org.bukkit.Sound";
import "org.bukkit.GameMode";
import "org.bukkit.Location";
import "org.bukkit.block.Block";
import "org.bukkit.block.data.Directional";
import "org.bukkit.block.data.Rotatable";
import "org.bukkit.block.data.Orientable";
import "org.bukkit.event.player.PlayerInteractEvent";
import "org.bukkit.block.BlockFace";
import "org.bukkit.inventory.meta.Damageable";

import "com.sk89q.worldguard.LocalPlayer";
import "com.sk89q.worldguard.protection.regions.RegionContainer";
import "com.sk89q.worldguard.protection.regions.RegionQuery";
import "com.sk89q.worldguard.WorldGuard";
import "com.sk89q.worldguard.protection.flags.Flags";
import "com.sk89q.worldguard.bukkit.WorldGuardPlugin";
import "com.sk89q.worldedit.bukkit.BukkitAdapter";
import "com.sk89q.worldguard.session.SessionManager";

boolean canBuild(Player player, Block block) {
    Location loc = block.getLocation();
    LocalPlayer localPlayer = WorldGuardPlugin.inst().wrapPlayer(player);
    RegionContainer container = WorldGuard.getInstance().getPlatform().getRegionContainer();
    SessionManager sessionManager = WorldGuard.getInstance().getPlatform().getSessionManager();
    RegionQuery query = container.createQuery();
    if (!sessionManager.hasBypass(localPlayer,  BukkitAdapter.adapt(loc.getWorld()))) {
        return query.testBuild(BukkitAdapter.adapt(loc), localPlayer);
    }
    return true;
}

void decrementDurability(ItemStack item, CustomStack customStack, Player player) {
    var meta = (Damageable) item.getItemMeta();
    if (meta.getDamage() + 1 >= customStack.getMaxDurability()){
        player.getWorld().playSound(player.getLocation(), Sound.ENTITY_ITEM_BREAK, 1.0f, 1.0f);
        player.getWorld().spawnParticle(Particle.ITEM, player.getLocation().add(0, 1.0, 0), 15, 0.2, 0.2, 0.2, 0.1, item);
        item.setAmount(0);
    } else {
        meta.setDamage(meta.getDamage() + 1);
        item.setItemMeta(meta);
    }   
}

cancelEvent();
if ($event instanceof PlayerInteractEvent interactEvent) {
    var clickedBlock = interactEvent.getClickedBlock();
    if (clickedBlock != null && !clickedBlock.getType().name().endsWith("_TORCH") && canBuild($player, clickedBlock)) {

        List<BlockFace> FACES = List.of(BlockFace.NORTH, BlockFace.EAST, BlockFace.SOUTH, BlockFace.WEST);
        List<BlockFace> ROTATIONS = List.of(
            BlockFace.NORTH, BlockFace.NORTH_NORTH_EAST, BlockFace.NORTH_EAST, BlockFace.EAST_NORTH_EAST,
            BlockFace.EAST, BlockFace.EAST_SOUTH_EAST, BlockFace.SOUTH_EAST, BlockFace.SOUTH_SOUTH_EAST,
            BlockFace.SOUTH, BlockFace.SOUTH_SOUTH_WEST, BlockFace.SOUTH_WEST, BlockFace.WEST_SOUTH_WEST,
            BlockFace.WEST, BlockFace.WEST_NORTH_WEST, BlockFace.NORTH_WEST, BlockFace.NORTH_NORTH_WEST
        );
        List<Axis> AXES = List.of(Axis.X, Axis.Y, Axis.Z);

        var data = clickedBlock.getBlockData();

        switch (data) {
            case Directional directional -> directional.setFacing(FACES.get((FACES.indexOf(directional.getFacing()) + 1) % FACES.size()));
            case Rotatable rotatable -> rotatable.setRotation(ROTATIONS.get((ROTATIONS.indexOf(rotatable.getRotation()) + 1) % ROTATIONS.size()));
            case Orientable orientable -> orientable.setAxis(AXES.get((AXES.indexOf(orientable.getAxis()) + 1) % AXES.size()));
            default -> {}
        }
        clickedBlock.setBlockData(data);
        if ($player.getGameMode() != GameMode.CREATIVE) decrementDurability($itemStack, $customStack, $player);

        var loc = clickedBlock.getLocation();
        loc.getWorld().spawnParticle(Particle.ITEM, loc.add(0.5,0.5,0.5), 6, 0.2, 0.2, 0.2, 0.1, newStack(clickedBlock.getType()));
        loc.getWorld().playSound(loc, clickedBlock.getBlockData().getSoundGroup().getBreakSound(), 1.0f, 1.0f);
    }
}
