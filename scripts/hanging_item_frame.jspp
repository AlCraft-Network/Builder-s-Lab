import "org.joml.Quaternionf";
import "org.joml.Vector3f";
import "org.bukkit.event.player.PlayerInteractEvent";
import "org.bukkit.block.data.Directional";
import "org.bukkit.block.data.Rotatable";
import "org.bukkit.block.BlockFace";
import "org.bukkit.block.Block";
import "org.bukkit.Location";
import "org.bukkit.entity.ItemDisplay";
import "org.bukkit.util.Transformation";
import "dev.lone.itemsadder.api.CustomFurniture";

import "com.sk89q.worldguard.LocalPlayer";
import "com.sk89q.worldguard.protection.regions.RegionContainer";
import "com.sk89q.worldguard.protection.regions.RegionQuery";
import "com.sk89q.worldguard.WorldGuard";
import "com.sk89q.worldguard.protection.flags.Flags";
import "com.sk89q.worldguard.bukkit.WorldGuardPlugin";
import "com.sk89q.worldedit.bukkit.BukkitAdapter";
import "com.sk89q.worldguard.session.SessionManager";

boolean canBuild(Player player, Block block) {
    Location loc = block.getLocation();
    LocalPlayer localPlayer = WorldGuardPlugin.inst().wrapPlayer(player);
    RegionContainer container = WorldGuard.getInstance().getPlatform().getRegionContainer();
    SessionManager sessionManager = WorldGuard.getInstance().getPlatform().getSessionManager();
    RegionQuery query = container.createQuery();
    if (!sessionManager.hasBypass(localPlayer,  BukkitAdapter.adapt(loc.getWorld()))) {
        return query.testBuild(BukkitAdapter.adapt(loc), localPlayer);
    }
    return true;
}

float getYawFromRotation(BlockFace face) {
    return switch (face) {
        case SOUTH -> 180.0f;
        case SOUTH_SOUTH_WEST -> -157.5f;
        case SOUTH_SOUTH_EAST -> 157.5f;
        case SOUTH_WEST -> -135.0f;
        case WEST_SOUTH_WEST -> -112.5f;
        case WEST -> -90.0f;
        case WEST_NORTH_WEST -> -67.5f;
        case NORTH_WEST -> -45.0f;
        case NORTH_NORTH_WEST -> -22.5f;
        case NORTH_NORTH_EAST -> 22.5f;
        case NORTH_EAST -> 45.0f;
        case EAST_NORTH_EAST -> 67.5f;
        case EAST -> 90.0f;
        case EAST_SOUTH_EAST -> 112.5f;
        case SOUTH_EAST -> 135.0f;
        default -> 0.0f;
    };
}

if ($event instanceof PlayerInteractEvent interactEvent) { 
    var clickedBlock = interactEvent.getClickedBlock();
    if (clickedBlock != null && clickedBlock.getType().name().contains("HANGING_SIGN") && canBuild($player, clickedBlock)) {
        cancelEvent();
        if (CustomFurniture.byAlreadySpawned(clickedBlock.getLocation().getBlock()) != null) return;

        var itemToPlace = $itemStack.clone();
        itemToPlace.setAmount(2);

        var data = clickedBlock.getBlockData();
        var loc = clickedBlock.getLocation();
        var rotation = data instanceof Directional ? ((Directional) data).getFacing() : ((Rotatable) data).getRotation();
        loc.setYaw(getYawFromRotation(rotation));

        $itemStack.setAmount($itemStack.getAmount()-1);
        
        delay(2, () => {
            var furniture = CustomFurniture.spawnPreciseNonSolid($customStack.getNamespacedID()+"_interact", loc.add(0.5,0,0.5));
            var hangingFrame = furniture.getEntity();
            for (int i = 0; i <= 2; i++) {
                var display = hangingFrame.getWorld().spawn(hangingFrame.getLocation(), ItemDisplay.class);
                display.setItemStack(itemToPlace);
                display.setTransformation(new Transformation(new Vector3f(0.0f, 0.3f, i == 1 ? -0.08f : 0.08f), new Quaternionf().rotateY((float) Math.toRadians(i == 1 ? 0.0f : -180.0f)), new Vector3f(0.5f, 0.5f, 0.5f), new Quaternionf()));
                hangingFrame.addPassenger(display);
            }
        });
    }
}